<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>s_slidebar</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = ((o_actionbox.x + (o_actionbox.sprite_width / 2)) - (sprite_width / 2));
y = ((o_actionbox.y + (o_actionbox.sprite_height / 2)) - (sprite_height / 2));

barvalue = 0;
bardirect = 1;
bartarget = random_range(10,90);
barwidth = 5;

bottomy = y + self.sprite_height;
linex = (x + barwidth) + ((self.sprite_width - barwidth) * (barvalue*0.01));
targetx = (x + barwidth) + ((self.sprite_width - barwidth) * (bartarget*0.01));

o_controller.alarm[10] = 180;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o_controller.setup = true{

if o_controller.event = false{
    o_controller.setup = false;
    instance_destroy(id);
}

if barvalue = 100
bardirect =0;
else if barvalue =0
bardirect = 1;

if bardirect =1
barvalue += 1;
else barvalue -= 1;

if mouse_check_button_pressed(mb_left) and (linex - (barwidth/2) &lt;= targetx + barwidth and linex - (barwidth/2) &gt;= targetx - barwidth)
o_controller.hp += 50;

linex = (x + barwidth)+ ((self.sprite_width - barwidth) * (barvalue*0.01));

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if o_controller.setup = true{

draw_self();
draw_sprite(s_sidebaroutline, -1, x,y);

draw_rectangle(linex - barwidth ,y, linex, bottomy,false);
draw_rectangle(targetx - barwidth ,y, targetx + barwidth, bottomy,false);

}

/*
draw_set_colour(c_blue);
draw_rectangle(targetx - barwidth,y, targetx + barwidth, bottomy, 1);
draw_line(linex - (barwidth/2),y, linex - (barwidth/2),bottomy);
draw_set_colour(c_black);
*/

scr_timer();
scr_infotext("(left click when meter is close to target)");



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
